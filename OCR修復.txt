app/ui/pages/ocr_adjustment.py
左上ペイン「OCR設定」パネル内の「OCRエンジン」ドロップダウンで選択されたエンジンに対応する設定項目を、右上ペイン「詳細設定」内に、「項目名：コントール　簡易説明」を各１行で簡潔に表示し、エンジンの設定値を変更可能に表示する。「OCRエンジン」ドロップダウンの選択エンジンが変わるたびにこれを書き換える。「保存」ボタンを押すと、現在の設定値を保存するべく日付とエンジン名を含む適切な名前を候補として準備した上で、保存ダイアログボックスを表示し、「保存」ボタンが押下されると、「app/config/ocr/エンジン名」フォルダ内に保存名で保存する。「読込」ボタンを押すと「app/config/ocr/エンジン名」フォルダに保存された設定ファイルを選択するダイアログボックスが開き、適切なファイルが選択されたら、右上ペイン「詳細設定」内にファイルから読み込まれた設定値を設定する。

「ファイル選択」ボタンを押下して表示されるダイアログボックスにて、Postgresqlに収録されたPDFファイルを取得すると、DBからfile_blob以下の必要な情報を取得した後にテンポラリでPDFファイルを取得し、右下ペインのPDFプレビューに表示する。PDFファイルが取得された状態で「OCR実行」ボタンが押されると、このPDFファイルに対して、選択されたOCRエンジンと各エンジンの設定値に基づいて所定のOCR処理を実施した結果のテキスト情報を、左下ペインの「OCR結果」パネル内に表示する。

左上ペイン「OCR設定」の「処理ページ」スピンボックスは、取得されたPDFファイルのページの最大ページ数から０までの整数を選択可能に設定され、右下ペイン「PDFプレビュー」に表示されたPDFプレビューを選択されたページに移動する。0が選択された場合は１ページ目に移動するものとする。

「誤字修正」チェックボックスは、保存された辞書に基づく置換処理を行うかどうかのbool値である。具体的な処理は、後ほど説明する。
「OCR実行」が押された後の具体的な処理は、以下を参照してください。
「
OLD/app/services/ocr/base.py
OLD/app/services/ocr/factory.py
OLD/app/services/ocr/settings.py
OLD/ocr/correct_text.py
OLD/ocr/ocr_process.py
OLD/ocr/orientation_corrector.py
OLD/ocr/spellcheck.py
OLD/ocr/settings/ocr_settings.json
OLD/ocr/dic
OLD/ocr/presets
new/services/ocr/base.py
new/services/ocr/factory.py

new/services/ocr_comparison/correction_service.py
new/utils/update_page_counts.py

app/services/ocr/ocr_process.py
app/services/ocr/orientation_corrector.py
app/services/ocr/spellcheck.py

ユーザー辞書を編集・保存・利用する仕組みを移植してほしい
OLD/app/routes/dict_editor.py
辞書はこちらにあるので、app/内の適切なフォルダに保存してください。
OLD/ocr/dic/known_words_common.csv
OLD/ocr/dic/known_words_custom.csv
OLD/ocr/dic/ocr_word_mistakes.csv
OLD/ocr/dic/user_dict.csv
OLD/ocr/dic/word_mistakes.csv
編集ボタンは、左上ペイン「OCR設定」の「処理ページ」スピンボタンの下にグレーの線を引いたその下に、辞書の数だけボタンを用意してください。
