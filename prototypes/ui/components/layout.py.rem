"""
共通レイアウトコンポーネント - new/系templates準拠
"""

from nicegui import ui
from typing import Optional, Dict, Any

# 絶対インポートでSimpleAuthを参照（相対インポート回避）
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

class SimpleAuth:
    """簡易認証システム - 一時的に再定義（インポート問題回避）"""
    _current_user: Optional[Dict[str, Any]] = None
    
    @classmethod
    def get_current_user(cls) -> Optional[Dict[str, Any]]:
        return cls._current_user
    
    @classmethod
    def is_admin(cls) -> bool:
        user = cls.get_current_user()
        return user and user.get("role") == "admin"
    
    @classmethod
    def is_authenticated(cls) -> bool:
        return cls._current_user is not None
    
    @classmethod
    def logout(cls):
        cls._current_user = None

class RAGHeader:
    """new/準拠の共通ヘッダー（98点仕様）"""
    
    def __init__(self, show_site_name: bool = True, current_page: str = ""):
        self.show_site_name = show_site_name
        self.current_page = current_page
        self.create_header()
    
    def create_header(self):
        """ヘッダー作成（完全画面幅対応・padding完全ゼロ）"""
        with ui.element('div').style('position:fixed;top:0;left:0;right:0;width:100%;height:48px;background:#334155;z-index:1000;display:flex;align-items:center;padding:0;margin:0;overflow:hidden;'):
            
            # 左側：サイト名（固定幅160px）
            with ui.element('div').style('width:160px;display:flex;align-items:center;'):
                if self.show_site_name:
                    ui.label('🏠 R&D RAGシステム').style('color:white;font-size:16px;font-weight:bold;margin-left:16px;')
            
            # 中央：ナビゲーション（完全中央配置）
            with ui.element('div').style('flex:1;display:flex;align-items:center;justify-content:center;gap:20px;'):
                if self.current_page != "index":
                    self._nav_button('🏠', 'ホーム', '/')
                if self.current_page != "chat":
                    self._nav_button('💬', 'チャット', '/chat')
                if self.current_page != "files":
                    self._nav_button('📁', 'ファイル', '/files')
                if self.current_page != "upload":
                    self._nav_button('📤', 'アップロード', '/upload')
                if self.current_page != "ocr-adjustment":
                    self._nav_button('🔄', 'OCR調整', '/ocr-adjustment')
                if self.current_page != "data-registration":
                    self._nav_button('⚙️', 'データ登録', '/data-registration')
                if self.current_page != "admin":
                    self._nav_button('⚡', '管理', '/admin')
            
            # 右側：認証部分（固定幅160px・右寄せ）
            with ui.element('div').style('width:160px;display:flex;align-items:center;justify-content:flex-end;gap:8px;margin-right:16px;'):
                ui.label('●').style('color:#10b981;font-size:12px;')
                ui.label('admin').style('color:white;font-size:14px;')
                ui.button('ログアウト', on_click=lambda: ui.navigate.to('/login')).style('background:#3b82f6;color:white;border:none;padding:4px 12px;border-radius:4px;font-size:12px;cursor:pointer;')
    
    def _nav_button(self, icon: str, label: str, path: str):
        """ナビゲーションボタン（共通スタイル）"""
        with ui.element('div').style('display:flex;align-items:center;gap:4px;cursor:pointer;padding:4px 8px;border-radius:4px;transition:background 0.2s;').on('click', lambda: ui.navigate.to(path)):
            ui.label(icon).style('color:white;font-size:16px;')
            ui.label(label).style('color:white;font-size:14px;')


class RAGFooter:
    """共通フッター - ステータスバー形式"""
    
    def __init__(self, show_status: bool = True):
        self.show_status = show_status
        if show_status:
            self.create_status_bar()
    
    def create_status_bar(self):
        """ステータスバー作成（完全画面幅・隙間ゼロ）"""
        with ui.element('div').style('position:fixed;bottom:0;left:0;right:0;width:100%;height:24px;background:#374151;color:white;display:flex;align-items:center;justify-content:space-between;padding:0;margin:0;font-size:12px;z-index:999;'):
            ui.label('システム: 正常稼働中').style('color:#10b981;margin-left:16px;')
            ui.label('接続: OK').style('color:#3b82f6;margin-right:16px;')

class RAGLayout:
    """ページ全体レイアウト"""
    
    def __init__(self, page_title: str = "R&D RAGシステム", show_header: bool = True, show_footer: bool = True):
        self.page_title = page_title
        self.show_header = show_header
        self.show_footer = show_footer
        
        # グローバルスタイル適用 - 余白完全最小化
        ui.add_head_html('''
        <style>
        body { 
            margin: 0; 
            padding: 0; 
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }
        .main-content {
            min-height: calc(100vh - 24px);
            padding: 0;
            margin: 0;
            padding-bottom: 24px;
        }
        .compact-layout {
            padding: 2px 4px;
            margin: 0;
        }
        .nicegui-row, .nicegui-column {
            gap: 2px !important;
        }
        .nicegui-card {
            margin: 1px !important;
            padding: 4px !important;
        }
        .nicegui-splitter {
            gap: 1px !important;
        }
        </style>
        ''')
        
        if self.show_header:
            RAGHeader(page_title)
    
    def __enter__(self):
        """コンテキストマネージャー開始"""
        self.content_container = ui.column().classes('main-content w-full')
        return self.content_container.__enter__()
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        """コンテキストマネージャー終了"""
        if self.show_footer:
            RAGFooter()
        return self.content_container.__exit__(exc_type, exc_val, exc_tb)

class MainContentArea:
    """メインコンテンツエリア - 全ページ共通の完璧なラッパー"""
    
    def __init__(self, footer_height: str = "24px"):
        """
        Args:
            footer_height: フッター高さ（デフォルト24px）
        """
        self.footer_height = footer_height
        self.container = None
        
    def __enter__(self):
        """メインコンテンツエリア開始 - 完璧な余白ゼロ設定"""
        self.container = ui.element('div').style(
            'margin-top:48px;'                    # ヘッダー高さ分のオフセット
            'margin-left:0;'                      # 左余白完全ゼロ
            'margin-right:0;'                     # 右余白完全ゼロ  
            f'margin-bottom:{self.footer_height};'  # フッター高さ分の下部余白
            'padding:0;'                          # 内部余白完全ゼロ
            'width:100%;'                         # 完全幅（100vwではなく100%）
            f'min-height:calc(100vh - 48px - {self.footer_height});'  # 最小高さ設定
            'overflow:hidden;'                    # はみ出し制御
            'position:relative;'                  # 子要素の基準位置
        )
        return self.container.__enter__()
        
    def __exit__(self, exc_type, exc_val, exc_tb):
        """メインコンテンツエリア終了"""
        return self.container.__exit__(exc_type, exc_val, exc_tb)