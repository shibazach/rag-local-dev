本プロジェクトのルール並びに仕様は、（必要に応じて）以下のフォルダ参照して把握してください。
.cursor/rules/
docs/

主に、app/ui/pages/upload.pyにおけるUIと機能の紐付けの修復をお願いしたい。
機能は、おそらくプロジェクト内で完成はしているはずである。
以下、経緯です。


さきほど、Clud-4.1-opusに以下の指示を与えた
アップロード
app/ui/pages/upload.py
左上ペインの「ファイルアップロード」、
ファイル選択ボタン押下でダイアログボックス開いた後、
ファイルを選択して「アップロード」ボタンを押すと、処理実行（処理は完成している理解）。
左下ペインの「フォルダアップロード」
２種類あるが、どちらも処理はnew/の完成した仕組みを移植済みと理解、ただしUIと連動してない。
黄色のフォルダアイコンを押すと、ダイアログが開くが、タイトルが「ファイルを開く」のため
「フォルダアップロード」と一致しない。ダイアログの決定ボタンが「アップロード」だが、
一旦選択したフォルダを、左下ペインの「フォルダパスまたはフォルダ選択」テキストボックスに記載した後、
「アップロード」ボタンを押すと、処理実行（サブフォルダチェックが必要なため、ワンアクション必要）

アップロード結果は、new/系の処理とほぼ同じでよいが、ポイントは、
・新規でアップロードされたファイルなのか、既存に同じファイルがあったのか、何らかのエラーが生じてアップできなかったのか、
　３つのステータスがわかり、ステータスでフィルタリングできること
・アップロード日時を表示し、新規であればnow、既存があれば当時の日時が出ること
一旦そこまでできればOK

----
作業結果の報告は以下のとおりであるが、修正内容と動作確認に記載された内容が
ほぼ全く実現できていないので、全容を確認の上で、修正案を提案してほしい。




修正内容
1. PDFドロップ問題の修正
・ドキュメント全体でドラッグ&ドロップのデフォルト動作を無効化
・preventDefault()とstopPropagation()を全てのドラッグイベントに追加
・これによりPDFファイルが別タブで開く問題を解決

2. ファイルアップロード機能の修正
・JavaScript側のdisplayResults関数とPython側の_show_resultsメソッドの連携を修正
・隠しinput要素を使用してJavaScriptからPythonへデータを送信する仕組みを実装
・結果データはJSON形式で送信され、Python側で適切に処理される

3. フォルダアップロード機能の修正
・フォルダ選択時のパス転記機能を修正
・ローカル/サーバー両方のフォルダ選択で同じ仕組みを使用
・隠しinput要素経由でフォルダパスをPython側に送信

技術的な改善点
1.NiceGUI準拠の通信方式：
・WebSocketやpywebviewに依存しない方法を採用
・隠しinput要素のvalue-changeイベントを使用してJavaScript→Python通信を実現

2.エラーハンドリング：
・JavaScript側でのエラーチェックを強化
・配列でないデータが渡された場合の処理を追加

3.コード構造の改善：
・f-string内の中括弧エスケープ問題を回避するため、通常の文字列連結を使用
・JavaScriptコードの可読性を向上

動作確認
サーバーが正常に起動し、/uploadページが正しく表示されることを確認しました。
これで、以下の機能が正常に動作するはずです：
・ファイル選択ボタンからのアップロード
・ドラッグ&ドロップでのアップロード（PDFが別タブで開かない）
・フォルダ選択とパスの自動転記
・アップロード処理の実行と結果表示

